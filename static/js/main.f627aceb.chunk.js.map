{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","contactsActions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","allContacts","allContact","toLowerCase","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","resetForm","className","s","title","contactForm","onSubmit","preventDefault","length","alert","find","contact","htmlFor","type","placeholder","inputName","onChange","inputPhone","pattern","required","inputPhonePrompt","btnAdd","Filter","filterWrapper","inputFilter","ContactList","listItems","map","item","onClick","handleRemoveContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f627aceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__xTxvv\",\"inputFilter\":\"Filter_inputFilter__ZYrSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItems\":\"ContactList_listItems__2JybJ\",\"item\":\"ContactList_item__2yAMS\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/change');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  return allContacts.filter(allContact =>\n    allContact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactForm.module.css';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.length === 0) {\n      alert('Some filed is empty');\n      return false;\n    }\n\n    const isExistContact = contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert(`${name} is already in contacts.`);\n      resetForm();\n      return;\n    }\n\n    return dispatch(contactsActions.addContact(name, number), resetForm());\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>Phonebook</h2>\n      <form className={s.contactForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"new-name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"new-name\"\n          placeholder=\"Enter name\"\n          className={s.inputName}\n          onChange={handleChange}\n          value={name}\n        />\n        <label htmlFor=\"new-phone\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          id=\"new-phone\"\n          placeholder=\"Enter phone number\"\n          className={s.inputPhone}\n          onChange={handleChange}\n          value={number}\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          required\n        />\n        <span className={s.inputPhonePrompt}>\n          Format phone number 000-00-00\n        </span>\n        <button className={s.btnAdd} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <h2 className={s.title}>Contacts</h2>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filterWrapper}>\n      <label htmlFor=\"contact-filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        id=\"contact-filter\"\n        placeholder=\"Enter name for search\"\n        className={s.inputFilter}\n        onChange={({ target }) =>\n          dispatch(contactsActions.changeFilter(target.value))\n        }\n        value={value}\n      />\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.listItems}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          &#128578; {name}: {number}\n          <button onClick={() => handleRemoveContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport './App.css';\nimport ContactList from './Components/ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__2cOlr\",\"contactForm\":\"ContactForm_contactForm__2uABO\",\"inputName\":\"ContactForm_inputName__2u6LN\",\"inputPhone\":\"ContactForm_inputPhone__1DRYp\",\"inputPhonePrompt\":\"ContactForm_inputPhonePrompt__2HRyt\",\"btnAdd\":\"ContactForm_btnAdd__3u4LT\"};"],"sourceRoot":""}